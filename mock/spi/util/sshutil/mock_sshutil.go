// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/docker/libmachete/spi/util/sshutil (interfaces: CommandRunner)

package sshutil

import (
	gomock "github.com/golang/mock/gomock"
	ssh "golang.org/x/crypto/ssh"
)

// Mock of CommandRunner interface
type MockCommandRunner struct {
	ctrl     *gomock.Controller
	recorder *_MockCommandRunnerRecorder
}

// Recorder for MockCommandRunner (not exported)
type _MockCommandRunnerRecorder struct {
	mock *MockCommandRunner
}

func NewMockCommandRunner(ctrl *gomock.Controller) *MockCommandRunner {
	mock := &MockCommandRunner{ctrl: ctrl}
	mock.recorder = &_MockCommandRunnerRecorder{mock}
	return mock
}

func (_m *MockCommandRunner) EXPECT() *_MockCommandRunnerRecorder {
	return _m.recorder
}

func (_m *MockCommandRunner) Exec(_param0 string, _param1 *ssh.ClientConfig, _param2 string) (*string, error) {
	ret := _m.ctrl.Call(_m, "Exec", _param0, _param1, _param2)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCommandRunnerRecorder) Exec(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Exec", arg0, arg1, arg2)
}
