// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/docker/libmachete/spi/instance (interfaces: Provisioner)

package instance

import (
	instance "github.com/docker/libmachete/spi/instance"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Provisioner interface
type MockProvisioner struct {
	ctrl     *gomock.Controller
	recorder *_MockProvisionerRecorder
}

// Recorder for MockProvisioner (not exported)
type _MockProvisionerRecorder struct {
	mock *MockProvisioner
}

func NewMockProvisioner(ctrl *gomock.Controller) *MockProvisioner {
	mock := &MockProvisioner{ctrl: ctrl}
	mock.recorder = &_MockProvisionerRecorder{mock}
	return mock
}

func (_m *MockProvisioner) EXPECT() *_MockProvisionerRecorder {
	return _m.recorder
}

func (_m *MockProvisioner) DescribeInstances(_param0 instance.GroupID) ([]instance.Description, error) {
	ret := _m.ctrl.Call(_m, "DescribeInstances", _param0)
	ret0, _ := ret[0].([]instance.Description)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProvisionerRecorder) DescribeInstances(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeInstances", arg0)
}

func (_m *MockProvisioner) Destroy(_param0 instance.ID) error {
	ret := _m.ctrl.Call(_m, "Destroy", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockProvisionerRecorder) Destroy(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Destroy", arg0)
}

func (_m *MockProvisioner) Provision(_param0 string, _param1 *instance.VolumeID) (*instance.ID, error) {
	ret := _m.ctrl.Call(_m, "Provision", _param0, _param1)
	ret0, _ := ret[0].(*instance.ID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProvisionerRecorder) Provision(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Provision", arg0, arg1)
}

func (_m *MockProvisioner) ShellExec(_param0 instance.ID, _param1 string) (*string, error) {
	ret := _m.ctrl.Call(_m, "ShellExec", _param0, _param1)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockProvisionerRecorder) ShellExec(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ShellExec", arg0, arg1)
}
