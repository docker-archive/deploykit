// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/docker/libmachete/storage (interfaces: KvStore)

package storage

import (
	storage "github.com/docker/libmachete/storage"
	gomock "github.com/golang/mock/gomock"
)

// Mock of KvStore interface
type MockKvStore struct {
	ctrl     *gomock.Controller
	recorder *_MockKvStoreRecorder
}

// Recorder for MockKvStore (not exported)
type _MockKvStoreRecorder struct {
	mock *MockKvStore
}

func NewMockKvStore(ctrl *gomock.Controller) *MockKvStore {
	mock := &MockKvStore{ctrl: ctrl}
	mock.recorder = &_MockKvStoreRecorder{mock}
	return mock
}

func (_m *MockKvStore) EXPECT() *_MockKvStoreRecorder {
	return _m.recorder
}

func (_m *MockKvStore) Delete(_param0 storage.Key) error {
	ret := _m.ctrl.Call(_m, "Delete", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockKvStoreRecorder) Delete(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete", arg0)
}

func (_m *MockKvStore) Get(_param0 storage.Key) ([]byte, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockKvStoreRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockKvStore) ListRecursive(_param0 storage.Key) ([]storage.Key, error) {
	ret := _m.ctrl.Call(_m, "ListRecursive", _param0)
	ret0, _ := ret[0].([]storage.Key)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockKvStoreRecorder) ListRecursive(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListRecursive", arg0)
}

func (_m *MockKvStore) Save(_param0 storage.Key, _param1 []byte) error {
	ret := _m.ctrl.Call(_m, "Save", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockKvStoreRecorder) Save(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Save", arg0, arg1)
}
