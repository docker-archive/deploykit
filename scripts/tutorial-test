#!/usr/bin/env bash

set -o errexit
set -o nounset

HERE="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$HERE"
cd ..

make binaries

cleanup() {
  kill $(jobs -p)
  rm -rf tutorial
}
trap cleanup EXIT

mkdir -p tutorial
build/infrakit-instance-file --dir ./tutorial/ &
build/infrakit-group-default --poll-interval 500ms &
build/infrakit-flavor-vanilla &

sleep 1

expect_exact_output() {
  message=$1
  cmd=$2
  expected_output=$3

  actual_output="$($2)"
  echo -n "--> $message: "
  if [ "$actual_output" = "$3" ]
  then
    echo 'PASS'
  else
    echo 'FAIL'
    echo "Expected output: $expected_output"
    echo "Actual output: $actual_output"
    exit 1
  fi
}

expect_output_lines() {
  message=$1
  cmd=$2
  expected_lines=$3

  actual_line_count=$($2 | wc -l)
  echo -n "--> $message: "
  if [ "$actual_line_count" -eq "$3" ]
  then
    echo 'PASS'
  else
    echo 'FAIL'
    echo "Expected line count: $expected_lines"
    echo "Actual line count: $actual_line_count"
    exit 1
  fi
}

expect_output_lines "3 plugins should be discoverable" "build/infrakit plugin ls -q" "3"
expect_output_lines "0 instances should exist" "build/infrakit instance describe -q --name instance-file" "0"

build/infrakit group commit docs/cattle.json

echo 'Waiting for group to be provisioned'
sleep 2

expect_output_lines "5 instances should exist in group" "build/infrakit group describe cattle -q" "5"
expect_output_lines "5 instances should exist" "build/infrakit instance describe -q --name instance-file" "5"

build/infrakit group free cattle
build/infrakit group commit docs/cattle.json

expect_exact_output "Should be watching one group" "build/infrakit group ls -q" "cattle"

expect_exact_output \
  "Update should roll 5 and scale group to 10" \
  "build/infrakit group commit docs/cattle2.json --pretend" \
  "Committing cattle would involve: Performing a rolling update on 5 instances, then adding 5 instances to increase the group size to 10"

build/infrakit group commit docs/cattle2.json

sleep 5

expect_output_lines "10 instances should exist in group" "build/infrakit group describe cattle -q" "10"

# Terminate 3 instances.
pushd tutorial
  rm $(ls | head -3)
popd

sleep 5

expect_output_lines "10 instances should exist in group" "build/infrakit group describe cattle -q" "10"

build/infrakit group destroy cattle
expect_output_lines "0 instances should exist" "build/infrakit instance describe -q --name instance-file" "0"

echo 'ALL TESTS PASSED'
